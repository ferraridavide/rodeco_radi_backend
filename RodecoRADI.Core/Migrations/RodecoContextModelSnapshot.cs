// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RodecoRADI.Core.Persistance;

#nullable disable

namespace RodecoRADI.Core.Migrations
{
    [DbContext(typeof(RodecoContext))]
    partial class RodecoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Bridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chainage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DescriptionEndPillars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionMiddlePillars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrainageFacilitiesNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityCurvature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MarkAsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MinmaxHeightUnderFacility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObstacleVisitingPossibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PavementWidthFirstDilatation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PavementWidthLastDilatation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PavementWidthMiddle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDocumentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Span")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpanLenght")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalConstructionLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeNameObstacle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WidthLeftPedestrianWay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WidthRightPedestrianWay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfBuild")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bridges");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Gallery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chainage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GalleryIllumination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GalleryLenght")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MarkAsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MinMaxHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PavementWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDocumentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Waterproofing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WidthLeftPedestrianWay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WidthRightPedestrianWay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfBuild")
                        .HasColumnType("int");

                    b.Property<int?>("nDrainageFacilities")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GalleryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("SidewalkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TunnelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WallId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BridgeId");

                    b.HasIndex("GalleryId");

                    b.HasIndex("SidewalkId");

                    b.HasIndex("TunnelId");

                    b.HasIndex("WallId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Sidewalk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chainage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MarkAsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MinmaxHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDocumentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfBuild")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sidewalks");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Tunnel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chainage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CrossSectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EvacuationTunnel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HydrantNetwork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LengthEntrancePortal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LengthExitPortal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LengthTunnelPipe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MarkAsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MinMaxHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NichesForParking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberFireProtectionDevices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfDrainageFacilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFanRows")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberSosCabin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObstacleVisitingPossibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PavementWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDocumentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalTunnellength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TunnelIllumination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WallsPainting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Waterproofing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WidthLeftPedestrianWay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WidthRightPedestrianWay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfBuild")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tunnels");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Wall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chainage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("MarkAsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MinmaxHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDocumentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalWalllength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfBuild")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Walls");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Bridge", b =>
                {
                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.AxleShape>", "BridgeAxleShape", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "EndCoordinates", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.Installations>", "Installations", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.PavementTransverseFall>", "PavementTransverseFall", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "StartCoordinates", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeAlignmentShape>", "AlignmentShapeOnBridge", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeConstructionMethod>", "ConstructionMethod", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeCrossSectionType>", "CrossSectionType", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeDilatationDevices>", "TypeOfDilatationDevices", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeDrainageSystem>", "DrainageSystem", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeFacilityType>", "FacilityType", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeFoundation>", "Foundation", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgePavementMaterial>", "PavementMaterial", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgePedestrianFences>", "PedestrianFences", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgePedestrianSeparation>", "PedestrianSeparationWays", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgePedestrianWaysCover>", "PedestrianWaysCover", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeStaticSystem>", "StaticSystem", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeSuperstructureMaterial>", "SuperstructureMaterial", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeSupportType>", "SupportType", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeTrafficBarriers>", "TrafficBarriers", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.BridgeWaterproofing>", "Waterproofing", b1 =>
                        {
                            b1.Property<Guid>("BridgeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BridgeId");

                            b1.ToTable("Bridges");

                            b1.WithOwner()
                                .HasForeignKey("BridgeId");
                        });

                    b.Navigation("AlignmentShapeOnBridge");

                    b.Navigation("BridgeAxleShape");

                    b.Navigation("ConstructionMethod");

                    b.Navigation("CrossSectionType");

                    b.Navigation("DrainageSystem");

                    b.Navigation("EndCoordinates");

                    b.Navigation("FacilityType");

                    b.Navigation("Foundation");

                    b.Navigation("Installations");

                    b.Navigation("PavementMaterial");

                    b.Navigation("PavementTransverseFall");

                    b.Navigation("PedestrianFences");

                    b.Navigation("PedestrianSeparationWays");

                    b.Navigation("PedestrianWaysCover");

                    b.Navigation("StartCoordinates");

                    b.Navigation("StaticSystem");

                    b.Navigation("SuperstructureMaterial");

                    b.Navigation("SupportType");

                    b.Navigation("TrafficBarriers");

                    b.Navigation("TypeOfDilatationDevices");

                    b.Navigation("Waterproofing");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Gallery", b =>
                {
                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.GalleryMaterial>", "Material", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.GalleryPedestrianWayMaterial>", "PedestrianWayMaterial", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.AlignmentShape>", "AlignmentShape", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.DrainageSystem>", "DrainageSystem", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "EndCoordinates", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.AxleShape>", "GalleryAxleShape", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.Installations>", "Installations", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.PavementMaterial>", "PavementMaterial", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.PavementTransverseFall>", "PavementTransverseFall", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "StartCoordinates", b1 =>
                        {
                            b1.Property<Guid>("GalleryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("GalleryId");

                            b1.ToTable("Galleries");

                            b1.WithOwner()
                                .HasForeignKey("GalleryId");
                        });

                    b.Navigation("AlignmentShape");

                    b.Navigation("DrainageSystem");

                    b.Navigation("EndCoordinates");

                    b.Navigation("GalleryAxleShape");

                    b.Navigation("Installations");

                    b.Navigation("Material");

                    b.Navigation("PavementMaterial");

                    b.Navigation("PavementTransverseFall");

                    b.Navigation("PedestrianWayMaterial");

                    b.Navigation("StartCoordinates");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Photo", b =>
                {
                    b.HasOne("RodecoRADI.Core.Persistance.Models.Bridge", null)
                        .WithMany("Photos")
                        .HasForeignKey("BridgeId");

                    b.HasOne("RodecoRADI.Core.Persistance.Models.Gallery", null)
                        .WithMany("Photos")
                        .HasForeignKey("GalleryId");

                    b.HasOne("RodecoRADI.Core.Persistance.Models.Sidewalk", null)
                        .WithMany("Photos")
                        .HasForeignKey("SidewalkId");

                    b.HasOne("RodecoRADI.Core.Persistance.Models.Tunnel", null)
                        .WithMany("Photos")
                        .HasForeignKey("TunnelId");

                    b.HasOne("RodecoRADI.Core.Persistance.Models.Wall", null)
                        .WithMany("Photos")
                        .HasForeignKey("WallId");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Sidewalk", b =>
                {
                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.SidewalkStructureMaterial>", "StructureMaterial", b1 =>
                        {
                            b1.Property<Guid>("SidewalkId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("SidewalkId");

                            b1.ToTable("Sidewalks");

                            b1.WithOwner()
                                .HasForeignKey("SidewalkId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "EndCoordinates", b1 =>
                        {
                            b1.Property<Guid>("SidewalkId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("SidewalkId");

                            b1.ToTable("Sidewalks");

                            b1.WithOwner()
                                .HasForeignKey("SidewalkId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "StartCoordinates", b1 =>
                        {
                            b1.Property<Guid>("SidewalkId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("SidewalkId");

                            b1.ToTable("Sidewalks");

                            b1.WithOwner()
                                .HasForeignKey("SidewalkId");
                        });

                    b.Navigation("EndCoordinates");

                    b.Navigation("StartCoordinates");

                    b.Navigation("StructureMaterial");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Tunnel", b =>
                {
                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.TunnelLiningMaterial>", "LiningMaterial", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.TunnelPedestrianWayMaterial>", "PedestrianWayMaterial", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.TunnelVentilation>", "TunnelVentilation", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.AlignmentShape>", "AlignmentShapeTunnel", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.DrainageSystem>", "DrainageSystem", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "EndCoordinates", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.PavementMaterial>", "PavementMaterial", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.PavementTransverseFall>", "PavementTransverseFall", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "StartCoordinates", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.AxleShape>", "TunnelAxleShape", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.Installations>", "TunnelInstallations", b1 =>
                        {
                            b1.Property<Guid>("TunnelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("TunnelId");

                            b1.ToTable("Tunnels");

                            b1.WithOwner()
                                .HasForeignKey("TunnelId");
                        });

                    b.Navigation("AlignmentShapeTunnel");

                    b.Navigation("DrainageSystem");

                    b.Navigation("EndCoordinates");

                    b.Navigation("LiningMaterial");

                    b.Navigation("PavementMaterial");

                    b.Navigation("PavementTransverseFall");

                    b.Navigation("PedestrianWayMaterial");

                    b.Navigation("StartCoordinates");

                    b.Navigation("TunnelAxleShape");

                    b.Navigation("TunnelInstallations");

                    b.Navigation("TunnelVentilation");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Wall", b =>
                {
                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.WallFoundation>", "Foundation", b1 =>
                        {
                            b1.Property<Guid>("WallId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("WallId");

                            b1.ToTable("Walls");

                            b1.WithOwner()
                                .HasForeignKey("WallId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.WallLocation>", "WallLocation", b1 =>
                        {
                            b1.Property<Guid>("WallId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("WallId");

                            b1.ToTable("Walls");

                            b1.WithOwner()
                                .HasForeignKey("WallId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.WallLocationCrossSection>", "WallLocationInCrossSection", b1 =>
                        {
                            b1.Property<Guid>("WallId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("WallId");

                            b1.ToTable("Walls");

                            b1.WithOwner()
                                .HasForeignKey("WallId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.WallMaterial>", "WallMaterial", b1 =>
                        {
                            b1.Property<Guid>("WallId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("WallId");

                            b1.ToTable("Walls");

                            b1.WithOwner()
                                .HasForeignKey("WallId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.EnumOrCustom<RodecoRADI.Core.Persistance.Models.WallType>", "WallType", b1 =>
                        {
                            b1.Property<Guid>("WallId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Custom")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Value")
                                .HasColumnType("int");

                            b1.HasKey("WallId");

                            b1.ToTable("Walls");

                            b1.WithOwner()
                                .HasForeignKey("WallId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "EndCoordinates", b1 =>
                        {
                            b1.Property<Guid>("WallId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("WallId");

                            b1.ToTable("Walls");

                            b1.WithOwner()
                                .HasForeignKey("WallId");
                        });

                    b.OwnsOne("RodecoRADI.Core.Persistance.Models.Coordinates", "StartCoordinates", b1 =>
                        {
                            b1.Property<Guid>("WallId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("WallId");

                            b1.ToTable("Walls");

                            b1.WithOwner()
                                .HasForeignKey("WallId");
                        });

                    b.Navigation("EndCoordinates");

                    b.Navigation("Foundation");

                    b.Navigation("StartCoordinates");

                    b.Navigation("WallLocation");

                    b.Navigation("WallLocationInCrossSection");

                    b.Navigation("WallMaterial");

                    b.Navigation("WallType");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Bridge", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Gallery", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Sidewalk", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Tunnel", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("RodecoRADI.Core.Persistance.Models.Wall", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
